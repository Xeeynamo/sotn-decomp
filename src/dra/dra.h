#ifndef DRA_H
#define DRA_H

#include "game.h"

// Defines the equipment that can be set on left and right hand
// This includes weapons, throw weapons, consumable and restoration items.
// D_800A4B04 it is assumed the equip data starts from here
// https://github.com/3snowp7im/SotN-Randomizer/blob/master/src/stats.js
typedef struct {
    /* 800a4b38 */ const char* name;
    /* 800a4b3C */ const char* description;
    /* 800a4b40 */ u16 attack;
    /* 800a4b42 */ u16 defense;
    /* 800a4b44 */ u16 element;
    /* 800a4b46 */ u8 unk0E;
    /* 800a4b46 */ u8 entId;
    /* 800a4b48 */ u16 unk10;
    /* 800a4b4A */ u16 unk12;
    /* 800a4b4C */ u16 unk14;
    /* 800a4b4E */ u16 unk16;
    /* 800a4b50 */ u8 unk18;
    /* 800a4b51 */ u8 isConsumable;
    /* 800a4b52 */ u16 unk1A;
    /* 800a4b54 */ u16 unk1C;
    /* 800a4b56 */ u16 unk1E;
    /* 800a4b58 */ u16 unk20;
    /* 800a4b5A */ u16 unk22;
    /* 800a4b5C */ u16 mpUsage;
    /* 800a4b5E */ u16 unk26;
    /* 800a4b60 */ u8 unk28; // somewhat range-related
    /* 800a4b61 */ u8 unk29;
    /* 800a4b62 */ u16 unk2A;
    /* 800a4b64 */ u16 icon;
    /* 800a4b66 */ u16 palette;
    /* 800a4b68 */ u16 unk30;
    /* 800a4b6A */ u16 unk32;
} Equipment;

// Defines armor, cloak and rings
typedef struct {
    /* 00 */ const char* name;
    /* 04 */ const char* description;
    /* 08 */ u32 unk08;
    /* 0C */ u32 unk0C;
    /* 10 */ u32 unk10;
    /* 14 */ u32 unk14;
    /* 18 */ u16 icon;
    /* 1A */ u16 palette;
    /* 1C */ u32 unk1C;
} Accessory;

extern void (*D_800A0004)(); // TODO pointer to 0x50 array of functions
extern u32 D_800A0158;
extern s32 D_800A015C;
extern s32 D_800A04EC;
extern s32 D_800A04F8;
extern s32 D_800A0510[];
extern u16 g_saveIconPalette[0x10][0x10];
extern u8* g_saveIconTexture[0x10];
extern s32 D_800A2438;
Unkstruct_800A2D98 D_800A2D98[];
extern u8 D_800A2EE8[];
extern u8 D_800A2EED;
extern u8 D_800A2EF8[];
extern u8 D_800A2EFD;
extern u8 D_800A2F08[];
extern u8 D_800A2F18[];
extern u8 D_800A2F28[];
extern u8 D_800A2F2D;
extern u8 D_800A2F38[];
extern u8 D_800A2F3D;
extern u16 D_800A2F48[];
extern u16 D_800A2F64[];
extern s32 D_800A2FBC[];
extern s32 D_800A2FC0[];
extern u16 player_equip_left_hand;

extern u32 g_playerEquip[];
// D_80097C00 = g_playerEquip[0]
// D_80097C04 = g_playerEquip[1]
// D_80097C08 = g_playerEquip[2]
// D_80097C0C = g_playerEquip[3]
// D_80097C10 = g_playerEquip[4]
// D_80097C14 = g_playerEquip[5]

extern Unkstruct10 D_800A2464[];
extern const char* c_strALUCARD;
extern const char* c_strSTR;
extern const char* c_strCON;
extern const char* c_strINT;
extern const char* c_strLCK;
extern const char* c_strEXP;
extern const char* c_strNEXT;
extern const char* c_strGOLD[];
extern const char* c_strLEVEL;
extern const char* c_strTIME;
extern const char* c_strROOMS;
extern const char* c_strKILLS;
extern const char* c_strHP;
extern const char* c_strMP;
extern const char* c_strHEART;
extern const char* c_strSTATUS;
extern const char* c_strButton;
extern const char* c_strCloak;
extern const char* c_strCloak2;
extern const char* c_strExterior;
extern const char* c_strLining;
extern const char* c_strButtonRightHand[];
extern const char* c_strButtonLeftHand;
extern const char* c_strButtonJump;
extern const char* c_strButtonSpecial;
extern const char* c_strButtonWolf;
extern const char* c_strButtonMist;
extern const char* c_strButtonBat;
extern const char* c_strNormal;
extern const char* c_strReversal;
extern const char* c_strSound;
extern const char* c_strStereo;
extern const char* c_strMono;
extern const char* c_strWindow;
extern const char* c_strTime;
extern const char* c_strALUCART;
extern const char* c_strSSword;
extern Equipment D_800A4B04[];
extern Unkstruct_800A4B12 D_800A4B1D[];
extern Accessory D_800A7718[];
extern Unkstruct_800A7734 D_800A7734[];
extern s8 D_800A841C[];  // related to player MP
extern s32 D_800ACC64[]; // probably a struct
extern RECT D_800ACD80;
extern RECT D_800ACD88[2];
extern RECT D_800ACD90;
extern RECT D_800ACDF0;
extern Unkstruct_800ACEC6 D_800ACEC6;
extern u8 D_800ACF4C[];
extern s16 D_800ACF8A[]; // collection of sounds?
extern s16 D_800ACF60[]; // collection of sounds?
extern s32 D_800ACFB4;
extern s32 D_800AE270[];
extern s32* D_800AE294; // might not really be a pointer
extern s16 D_800AFDA6;
extern const char* c_strEquip;
extern const char* c_strSpells;
extern const char* c_strRelics;
extern const char* c_strSystem;
extern const char* c_strFamiliars;
extern const char* c_strFamiliar;
extern const char* c_strSpecial2;
extern RECT c_backbufferClear;
extern s32 D_800B0798[];
extern s32 D_800B07C8;
extern s32 D_800B0830[];
extern s32 D_800B083C[];
extern s32 D_800B0914;
extern s16 D_800BD07C[];
extern s32 D_800BD1C0;
extern s32 D_800BD1C4;
extern const char D_800DB524[];
extern const char a0104x04x;
extern const char a2304x04x;
extern const char aBlue;
extern const char aDr03x;
extern const char aEff03x;
extern const char aEnv03x;
extern const char aG403x;
extern const char aGreen;
extern const char aGt303x;
extern const char aGt403x;
extern const char aHalfOff;
extern const char aHalfOn;
extern const char aLine03x;
extern const char aRed;
extern const char aRgb02x02x02x;
extern const char aSp03x;
extern const char aSp1603x;
extern const char aTile03x;
extern s32 D_800DC4C0;
extern s8 D_800DC4C4;
extern u8 D_800BF554[];
extern u8 D_800BF555[];
extern u8 D_800BF556[];
extern u8 D_800BF559[];
extern u8 D_800BF55A[];
extern s32 D_801362AC;
extern s32 D_801362B0;
extern s32 D_801362B4;
extern s32 D_801362B8;
extern s32 D_801362BC;
extern s32 g_DebugPalIdx;
extern u32 D_801362C4;
extern s32 D_801362C8;
extern u32* D_801362CC;
extern s32 D_801362D0[];
extern s32 D_801362D4;
extern s32 D_801362D8;
extern GpuUsage g_GpuMaxUsage;
extern s32 g_softResetTimer;
extern s16 D_80136308[];
extern s32 D_8013640C;
extern s16 D_80136460[];
extern s16 D_80136C60[];
extern u8 D_80137460;
extern s32 D_80137470;
extern s32 D_80137474;
extern u16 D_80137478[];
extern u16 D_801374B8[];
extern s16 D_801374F8;
extern u8* D_80137578;
extern u8* D_8013757C;
extern s32 D_80137580;
extern s32 D_80137584;
extern s32* D_80137590;
extern RoomLoadDef* D_801375BC;
extern s16 D_80137538;
extern s32 D_801375C8;
extern Unkstruct_800A2D98 D_801375CC;
extern s32 D_801375D4;
extern s32* D_801375D8;
extern s32 D_801375DC;
extern s32 D_801375FC;
extern s32 D_80137608;
extern s32 g_IsSelectingEquipment;
extern s32 g_EquipmentCursor;
extern s32 D_80137614;
extern s32 D_80137618;

/**
 * can't use "extern MenuContext D_8013761C[]";
 * as it's 2-byte aligned
 */
extern u8 D_8013761C[];
extern s32* D_8013763A; // type MenuContext ?
extern s16 D_8013767C;
extern s16 D_80137688;
extern u16 D_8013768C;
extern u8 D_80137692;
extern u8 D_801376B0;
extern s32 D_8013783C;
extern s32 D_801377FC[];
extern s32 D_80137840;
extern s32 D_80137844[];
extern s32 D_80137848[];
extern s32 D_8013784C;
extern s32 g_someValue;
extern s32 D_80137930;
extern s32 D_80137934;
extern s32 D_80137938[];
extern s8* D_8013794C; // Pointer to texture pattern
extern s32 D_80137950;
extern s32 D_80137954;
extern s32 D_80137960;
extern s32 D_80137964;
extern s32 D_80137968;
extern s32 D_8013796C;
extern s32 D_80137970;
extern s32 D_80137974;
extern u32 D_80137978;
extern u32 D_8013797C;
extern s32 D_80137980;
extern s32 D_80137984;
extern u32 D_80137988;
extern u32 D_8013798C;
extern s32 D_80137994;
extern s32 D_80137998;
extern u32 D_8013799C;
extern s32 D_801379A0;
extern s32 D_80137E40;
extern s32 D_80137E44;
extern s32 D_80137E48;
extern s32 D_80137E4C;
extern s32 D_80137E50;
extern s32 D_80137E64;
extern s32 D_80137E68;
extern s32 D_80137F6C;
extern void* D_80137F7C;
extern s32 D_80137F9C;
extern s32 D_80138008;
extern s32 D_8013841C;
extern s32 D_80138430;
extern s32 D_80138438;
extern s32 D_80138444;
extern s32 D_80138460;
extern const char* D_80138784[487];
extern s32 D_80138F20;
extern u8 D_80138F24[]; // Confirmed part of an array / struct
extern u8 D_80138F2C[];
extern s32 D_80138F28;
extern s32 D_80138F7C;
extern s32 D_80138FB0;
extern s16 D_80138FC4;
extern s16 D_80139000;
extern s16 D_80139008;
extern s8 D_80139018[];
extern s32 g_DebugCurPal;
extern s16 D_8013901C;
extern u8 D_80139020;
extern s8 D_80139058[];
extern u8 D_801390A0;
extern u8 D_801390A8;
extern s16 D_801390AC[];
extern s32 D_801390B4[];
extern s8 D_801390C4;
extern GpuBuffer* D_801390D4;
extern u8 D_801390D8;
extern Unkstruct_801390DC D_801390DC[];
extern u16 D_801396E4;
extern Multi D_801396E6;
extern u16 D_801396E8;
extern s16 D_801396EA;
extern s32 D_801396F0;
extern u16 D_801396F4;
extern s32 D_801397FC;
extern s16 D_80139804;
extern s32 D_8013980C;
extern u8 D_80139810;
extern s16 D_80139814[];
extern s16 D_80139820;
extern s32 D_80139828[];
extern s32 D_80139834[];
extern s16 D_80139868[];
extern s16 D_80139A6C;
extern s16 D_80139A70;
extern s16 D_80139A78;
extern s16 D_8013AE7C;
extern volatile unsigned char D_8013AE80;
extern s16 D_8013AE84[];
extern s16 D_8013AE8C;
extern s16 D_8013AEA0[];
extern s16 D_8013AE94;
extern s32 D_8013AE9C;
extern s16 D_8013AED4[];
extern s16 g_volumeL;
extern s16 g_volumeR;
extern s16 D_8013B678[];
extern s16 D_8013B698;
extern s16 D_8013AEE0;
extern u8 D_8013AEEC;
extern s32 D_8013B158;
extern Unkstruct_8013B160 D_8013B160[];
extern s32 D_8013B3D0;
extern s16 D_8013B3E8[];
extern s32 D_8013B5E8;
extern s8 D_8013B5EC[];
extern s8 D_8013B614[];
extern s32 D_8013B61C;
extern s16 D_8013B620[];
extern s32 D_8013B628[];
extern s16 D_8013B648[];
extern s16 D_8013B650[];
extern s16 D_8013B658;
extern s32 D_8013B660;
extern s16 D_8013B664;
extern s16 D_8013B668;
extern s16 D_8013B66C[];
extern u8 D_8013B680;
extern s8 D_8013B684;
extern s8 D_8013B690;
extern s32 D_8013B694;
extern s32 D_8016FCC0[];
extern void (*D_8013C00C)(void);
extern void (*D_80170000)(void);
extern s32 (*D_8017A018)();
extern s32 (*D_8017D018)();
extern ImgSrc* g_imgUnk8013C200;
extern ImgSrc* g_imgUnk8013C270;
extern s32 D_801EC000[];

void InitializePads(void);
void ReadPads(void);
void ClearBackbuffer(void);
void SetRoomForegroundLayer(s32 /* ? */);
void SetRoomBackgroundLayer(s32 /* ? */, s32 /* ? */);
void CheckCollision(s32 x, s32 y, CollisionResult* res, s32 unk);
void PlaySfx(s16 sfxId);
s32 func_80019444(void);
void func_800209B4(s32*, s32, s32);
void func_80021E38(s32);
void func_80021EEC(void);
void func_80028D3C(s32, s32);
void func_80029FBC(s32);
void func_8002A09C(void*);
void func_8002ABF4(s32);
void func_800E346C(void);
void func_800E34A4(s8 arg0);
void func_800E34DC(s32 arg0);
void func_800E4124(s32 arg0);
void func_800E8D24(void);
void func_800E8DF0(void);
s32 func_800E912C(void);
s32 func_800E9208(void);
void func_800E928C(void);
void func_800E92E4(void);
void func_800E92F4(void);
void func_800EA5E4(s32);
void func_800EA538(s32);
void func_800EAD7C(void);
void func_800EAEEC(void);
void func_800EB534(s32 equipIcon, s32 palette, s32 index);
void func_800ECE2C(void);
void func_800EDA70(s32* arg0);
void func_800EDA94(void);
void func_800EDAE4(void);
s32 AllocPolygons(u8 primitives, s32 count);
s32 func_800EDD9C(u8 primitives, s32 count);
void func_800EFBF8(void);
void FreePolygons(s32 index);
void func_800F0334(s32);
void func_800F0578(s32 arg0);
s32 func_800F087C(u32, u32);
bool SetNextRoomToLoad(u32 chunkX, u32 chunkY);
void func_800F180C(s32, s32, void*);
void func_800F1868(s32, s32, void*);
void func_800F18C4(s32, s32);
void func_800F1954(s32, s32, s32);
void func_800F1EB0(s32, s32, s32);
void func_800F2120(void);
void func_800F223C(void);
void func_800F4994(void);
s32 func_800F4D38(s32, s32);
void func_800F4F48(void);
void func_800F4FD0(void);
bool IsAlucart(void);
s32 SquareRoot12(s32, s32);
void func_800F53A4(void);
bool ScissorSprite(SPRT* arg0, MenuContext* arg1);
void func_800F5904(void*, s32 x, s32 y, s32 w, u32 h, s32 u, s32 v, s32 unk1,
                   s32 unk2, bool disableTexShade, s32 unk4);
void DrawMenuSprite(MenuContext* context, s32 x, s32 y, s32 width, s32 height,
                    s32 u, s32 v, s32 clut, s32 tpage, s32 arg9,
                    s32 colorIntensity, s32 argB);
void DrawMenuRect(MenuContext* context, s32 posX, s32 posY, s32 width,
                  s32 height, s32 r, s32 g, s32 b);
s32 func_800F62E8(s32 arg0);
void func_800F98AC(s32 arg0, s32 arg1);
void func_800F99B8(s32 arg0, s32 arg1, s32 arg2);
void DrawMenuChar(char ch, int x, int y, MenuContext* context);
void DrawMenuStr(const char* str, s32 x, s32 y, MenuContext* context);
void DrawMenuInt(s32 value, s32 x, s32 y, MenuContext*);
void DrawSettingsReverseCloak(MenuContext* context);
void DrawSettingsSound(MenuContext* context);
void DrawPauseMenu(s32 arg0);
void func_800F82F4(void);
void func_800F8858(MenuContext* context);
void func_800FABEC(s32 arg0);
void func_800FAC30(void);
void func_800FAF44(s32);
s32 func_800FD4C0(s32, s32);
s32 func_800FD664(s32 arg0);
s32 func_800FD6C4(s32 equipTypeFilter);
u8* func_800FD744(s32 equipTypeFilter);
u8* func_800FD760(s32 equipTypeFilter);
const char* GetEquipmentName(s32 equipTypeFilter, s32 equipId);
u32 CheckEquipmentItemCount(u32 itemId, u32 equipType);
void func_800FD874(u16 arg0, s32 arg1);
s16 func_800FDB18(s32, s32);
void func_800FDCE0(s32);
void func_800FDE00(void);
void func_800FE3C4(Unkstruct_8011A290*, s32, s32);
void func_800FE728(s32, Unkstruct_8011B334*, s32);
s32 func_800FE97C(s32*, s32, s32, s32);
s32 func_800FEEA4(s32, s32);
void func_800FF0A0(s32 arg0);
void func_80102CD8(s32);
void func_80102DEC(s32 arg0);
void func_80103EAC(void);
void func_80106590(Entity*);
void func_801065F4(s16 startIndex);
void func_801071CC(POLY_GT4* poly, u32 colorIntensity, s32 vertexIndex);
void func_80107250(POLY_GT4* poly, s32 colorIntensity);
void func_80107360(POLY_GT4* poly, s32 x, s32 y, s32 width, s32 height, s32 u,
                   s32 v);
void func_801073C0(void);
void func_801092E8(s32);
void SetPolyRect(POLY_GT4* poly, s32 x, s32 y, s32 width, s32 height);
void func_8010D584(s16 arg0);
void func_8010DDA0(s32, s32*);
void func_8010DFF0(s32, s32);
void func_8010E0A8(void);
void func_8010E0B8(void);
void func_8010E470(s32, s32);
void func_8010E570(s32);
void func_8010E83C(s32 arg0);
void func_80111928(void);
void func_80111CC0(void);
bool func_80111D24(void);
void func_80115394(s32*, s16, s16);
void func_80115C50(void);
void func_80118894(Entity*);
void func_80118C28(s32 arg0);
void func_80118D0C(Entity* entity);
void func_80119588(Entity* entity);
void func_80119D3C(Entity* entity);
void func_80119F70(Entity* entity);
void func_8011A4C8(Entity* entity);
Entity* func_8011AAFC(Entity* entity, s32, s32);
void func_8011AC3C(Entity* entity);
void func_8011B190(Entity* entity);
void func_8011B334(Entity* entity);
void func_8011B480(Entity* entity);
void func_8011B530(Entity* entity);
void func_8011B5A4(Entity* entity);
void func_8011BBE0(Entity* entity);
void func_8011BDA4(Entity* entity);
void func_8011D9F8(Entity* entity);
void func_8011E0E4(Entity* entity);
void func_8011E0EC(Entity* entity);
void func_8011E390(Entity* entity);
void func_8011E4BC(Entity* entity);
void func_8011EDA0(Entity* entity);
void func_8011EDA8(Entity* entity);
void func_8011F074(Entity* entity);
void func_8011F24C(Entity* entity);
void func_8011F934(Entity* entity);
void func_801200AC(Entity* entity);
void func_80120AF8(Entity* entity);
void func_80120DD0(Entity* entity);
void func_80121980(Entity* entity);
void func_8012231C(Entity* entity);
void func_80123788(Entity* entity);
void func_801238CC(Entity* entity);
void func_80123A60(Entity* entity);
void func_80123B40(Entity* entity);
void func_80123F78(Entity* entity);
void func_801243B0(Entity* entity);
void func_80124A8C(Entity* entity);
void func_80124B88(Entity* entity);
void func_80125330(Entity* entity);
void func_80125C2C(Entity* entity);
void func_80125E68(Entity* entity);
void func_801262AC(Entity* entity);
void func_801267B0(Entity* entity);
void func_80126C48(Entity* entity);
void func_80126ECC(Entity* entity);
void func_801274DC(Entity* entity);
void func_8012768C(Entity* entity);
void func_80127840(Entity* entity);
void func_801279FC(Entity* entity);
void func_80127CC8(Entity* entity);
void func_80127F40(Entity* entity);
void func_80128714(Entity* entity);
void func_80128C2C(Entity* entity);
void func_801291C4(Entity* entity);
void func_80129864(Entity* entity);
void func_8012A0A4(Entity* entity);
void func_8012A528(Entity* entity);
void func_8012A89C(Entity* entity);
void func_8012B78C(Entity* entity);
void func_8012B990(Entity* entity);
void func_8012BEF8(Entity* entity);
void func_8012CA64(void);
void func_8012CB4C(void);
void func_8012CCE4(void);
void func_8012CFA8(void);
void func_8012F894(Entity* entity);
void func_80130264(Entity* entity);
void func_80130618(Entity* entity);
void func_801309B4(Entity* entity);
void func_80130E94(Entity* entity);
void func_8013136C(Entity* entity);
void func_801315F8(Entity* entity);
void func_80131EBC(const char* str, s16 arg1);
void func_80131ED8(s32 value);
void func_80131EE8(void);
void func_80131F04(void);
s32 func_80131F28(void);
u16 func_80131F38(void);
bool func_80131F68(void);
s16 func_80131F94(void);
void func_80132134(void);
void func_8013216C(void);
void func_801321FC(void);
s32 func_80132264(void);
s32 func_801326D8(void);
void func_80132C2C(s16);
u8 func_80132028(u_char com, u_char* param, u_char* result);
void func_8013271C(void);
void func_80132760(void);
void func_80132A04(s16 voice, s16 vabId, s16 prog, s16 tone, u16 note,
                   s16 volume, s16 distance);
void func_801337B4(void);
bool func_80133940(void);
bool func_80133950(void);
void func_80133FCC(void);
void func_8013415C(void);
void func_801361F8(void);

#endif