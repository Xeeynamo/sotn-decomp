name: Update progress

on:
  push:
    branches:
      - master
    paths-ignore:
      - '*.md'
      - '**/*.md'
  pull_request_target:
    paths-ignore:
      - '.github/workflows/**'
      - '*.md'
      - '**/*.md'
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.job }}-${{ github.event_name }}-${{ github.number }}
  cancel-in-progress: false

jobs:
  build-and-test:
    strategy:
      matrix:
        version: ["us"]
    # build-and-test cannot work if the repository owner is not Xeeynamo
    # due to the missing secrets to clone the game's data repository
    if: github.repository == 'Xeeynamo/sotn-decomp'
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ matrix.version }}
    steps:
      - name: Install requirements
        run: sudo apt-get install gcc-mipsel-linux-gnu
      - name: Clone main repo (PR)
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.after }}
          submodules: false
      - name: Clone main repo
        if: github.event_name != 'pull_request_target'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          submodules: false
      - name: Clone dependencies
        uses: actions/checkout@v3
        with:
          repository: xeeynamo/sotn-decomp-dependencies
          ref: ${{ matrix.version }}
          token: ${{ secrets.SOTN_DECOM_PRIVATE_REPO_TOKEN }}
          path: 'disks/dependencies'
      - name: Setting up dependencies
        working-directory: disks
        run: |
          cat dependencies/* > dependencies.tar.gz
          tar -xf dependencies.tar.gz
          mv *.cue sotn.${{ matrix.version }}.cue
      - name: Extract dependencies
        run: make extract_disk
      - name: Split game data
        run: make -j extract
      - name: Build binaries
        run: make -j build
      - name: Check if they match
        run: make check
      - name: Remove clutter from build folder
        run: rm -rf build/asm build/src
      - name: Export build folder
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: build_${{ matrix.version }}
          path: build/${{ matrix.version }}
  generate-progress-report:
    strategy:
      matrix:
        version: ["us"]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ matrix.version }}
      FROGRESS_API_BASE_URL: ${{ secrets.FROGRESS_API_BASE_URL }}
      FROGRESS_API_SECRET: ${{ secrets.FROGRESS_API_SECRET }}
      DISCORD_PROGRESS_WEBHOOK: ${{ secrets.DISCORD_PROGRESS_WEBHOOK }}
    steps:
      - name: Clone main repository
        uses: actions/checkout@v3
        with:
          submodules: false
      - name: Clone dependencies
        uses: actions/checkout@v3
        with:
          repository: xeeynamo/sotn-decomp-dependencies
          ref: ${{ matrix.version }}
          token: ${{ secrets.SOTN_DECOM_PRIVATE_REPO_TOKEN }}
          path: 'disks/dependencies'
      - name: Setting up dependencies
        working-directory: disks
        run: |
          cat dependencies/* > dependencies.tar.gz
          tar -xf dependencies.tar.gz
          mv *.cue sotn.${{ matrix.version }}.cue
      - name: Extract dependencies
        run: make extract_disk
      - name: Split game data
        run: make -j extract
      - name: Obtain built binaries
        uses: actions/download-artifact@v3
        with:
          name: build_${{ matrix.version }}
          path: build/${{ matrix.version }}
      - name: Generate and send progress report
        run: python3 tools/progress.py --version us
  generate-duplicates-report:
    strategy:
      matrix:
        version: ["us"]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ matrix.version }}
    steps:
      - name: Clone main repository
        uses: actions/checkout@v3
        with:
          submodules: false
      - name: Clone dependencies
        uses: actions/checkout@v3
        with:
          repository: xeeynamo/sotn-decomp-dependencies
          ref: ${{ matrix.version }}
          token: ${{ secrets.SOTN_DECOM_PRIVATE_REPO_TOKEN }}
          path: 'disks/dependencies'
      - name: Setting up dependencies
        working-directory: disks
        run: |
          cat dependencies/* > dependencies.tar.gz
          tar -xf dependencies.tar.gz
          mv *.cue sotn.${{ matrix.version }}.cue
      - name: Extract dependencies
        run: make extract_disk
      - name: Split game data
        run: make -j extract
      - name: Obtain built binaries
        uses: actions/download-artifact@v3
        with:
          name: build_${{ matrix.version }}
          path: build/${{ matrix.version }}
      - name: Clone asset repository
        uses: actions/checkout@v3
        with:
          ref: 'gh-duplicates'
          path: 'gh-duplicates'
      - name: Set-up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install secondary pre-requirements
        run: pip3 install -r tools/requirements-python.txt
      - name: Generate duplicates report
        run: python3 tools/find_duplicates.py -a
      - name: Rename output file into something more meaningful
        run: mv *_all_matches.txt gh-duplicates/duplicates.txt
      - name: Generate function report
        run: python3 tools/function_finder.py > gh-duplicates/functions.txt
      - name: Commit all reports
        run: |
            git config --global user.name 'GitHub Action' 
            git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
            git add -A
            git commit -m 'Update reports' || true
            git push
        working-directory: gh-duplicates
